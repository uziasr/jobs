{"version":3,"sources":["components/JobCard.js","components/data.js","components/JobGrid.js","components/JobJumbo.js","components/Job.js","App.js","index.js"],"names":["CardWrapper","styled","div","_templateObject","JobCard","props","react_default","a","createElement","Card","body","outline","color","CardTitle","className","title","CardText","p_title","type","locate","created","react_router_dom","Object","assign","to","concat","job","city","id","Button","languages","cityNames","CustomCard","JobGrid_templateObject","FormWrapper","_templateObject2","GridContainer","_templateObject3","JobGrid","_useState","useState","_useState2","slicedToArray","companyArr","setCompanyArr","_useState3","_useState4","tech","setTech","_useState5","_useState6","location","setLocation","_useState7","_useState8","url","setTheUrl","setUrl","loc","lang","useEffect","axios","get","then","response","data","catch","error","console","log","length","split","join","FormGroup","Label","for","Input","name","map","onClick","document","getElementById","value","getInput","obj","ind","key","company","created_at","splice","JobJumbo_templateObject","Example","Jumbotron","TextWrap","Job_templateObject","RightWrap","Job_templateObject2","LeftWrap","Job_templateObject3","Job","jobObj","setJobObj","noHTML","text","replace","_props$match$params$i","match","params","_props$match$params$i2","how_to_apply","description","App","react_router","exact","path","component","JobJumbo","ReactDOM","render","src_App"],"mappings":"smBAKA,IAAMA,EAAaC,IAAOC,IAATC,KAWF,SAASC,EAAQC,GAC5B,OACAC,EAAAC,EAAAC,cAACR,EAAD,KACIM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,WACzBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,UAAU,MAAMT,EAAMU,OACjCT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KAAWX,EAAMY,QAAjB,MAA6BZ,EAAMa,MAFnC,IAEoDZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,kBAAqBX,EAAMc,QAAkBb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,qBAAwBX,EAAMe,SAC/Hd,EAAAC,EAAAC,cAACa,EAAA,EAADC,OAAAC,OAAA,CAAMC,GAAE,QAAAC,OAAUpB,EAAMqB,IAAhB,KAAAD,OAAuBpB,EAAMsB,KAA7B,KAAAF,OAAqCpB,EAAMuB,KAASvB,GAAOC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAQjB,MAAM,WAAd,8CCtB9DkB,EAAY,CACrB,SACA,OACA,IACA,MACA,OACA,KACA,aACA,MACA,SACA,OACA,SACA,QACA,OACA,IACA,MACA,OACA,QACA,OACA,UACA,MACA,OACA,OACA,SAESC,EAAY,CAAC,WAAY,UAAW,QAAS,SAAU,cAAe,aAAc,YAAa,WAAY,UAAW,YAAa,YAAa,UAAW,eAAgB,WAAY,YAAa,SAAU,YAAa,SAAU,UAAW,gBAAiB,UAAW,SAAU,SAAU,cAAe,YAAa,aAAc,cAAe,WAAY,UAAW,WAAY,WAAY,YAAa,WAAY,aAAc,cAAe,QAAS,aAAc,iBAAkB,SAAU,UAAW,YAAa,YAAa,aAAc,WAAY,cAAe,QAAS,UAAW,UAAW,aAAc,YAAa,SAAU,aAAc,aAAc,OAAQ,iBAAkB,eAAgB,YAAa,WAAY,aAAc,YAAa,cAAe,aAAc,UAAW,cAAe,aAAc,gBAAiB,cAAe,aAAc,YAAa,kBAAmB,mBAAoB,WAAY,WAAY,UAAW,gBAAiB,SAAU,iBAAkB,aAAc,SAAU,YAAa,UAAW,YAAa,kBAAmB,SAAU,gBAAiB,UAAW,SAAU,SAAU,aAAc,UAAW,SAAU,SAAU,SAAU,WAAY,UAAW,YAAa,YAAa,UAAW,OAAQ,YAAa,SAAU,aAAc,YAAa,QAAS,eAAgB,YAAa,QAAS,UAAW,eAAgB,kBAAmB,aAAc,oBAAqB,aAAc,aAAc,YAAa,UAAW,SAAU,YAAa,cAAe,eAAgB,UAAW,WAAY,UAAW,WAAY,gBAAiB,eAAgB,YAAa,YAAa,WAAY,aAAc,aAAc,kBAAmB,aAAc,UAAW,YAAa,aAAc,WAAY,iBAAkB,UAAW,QAAS,YAAa,WAAY,UAAW,UAAW,aAAc,YAAa,WAAY,QAAS,UAAW,SAAU,aAAc,mBAAoB,aAAc,eAAgB,eAAgB,YAAa,SAAU,SAAU,UAAW,eAAgB,YAAa,cAAe,eAAgB,SAAU,SAAU,YAAa,UAAW,cAAe,YAAa,UAAW,UAAW,YAAa,YAAa,QAAS,YAAa,eAAgB,WAAY,WAAY,YAAa,UAAW,SAAU,aAAc,YAAa,SAAU,aAAc,aAAc,YAAa,UAAW,cAAe,aAAc,SAAU,cAAe,aAAc,SAAU,UAAW,QAAS,UAAW,aAAc,SAAU,aAAc,UAAW,UAAW,UAAW,YAAa,UAAW,SAAU,OAAQ,WAAY,QAAS,YAAa,cAAe,UAAW,gBAAiB,SAAU,UAAW,SAAU,WAAY,aAAc,gBAAiB,eAAgB,WAAY,WAAY,eAAgB,aAAc,SAAU,SAAU,YAAa,cAAe,YAAa,aAAc,cAAe,WAAY,gBAAiB,SAAU,WAAY,eAAgB,UAAW,SAAU,SAAU,mBAAoB,kBAAmB,aAAc,UAAW,UAAW,UAAW,QAAS,YAAa,SAAU,QAAS,gBAAiB,SAAU,UAAW,QAAS,UAAW,SAAU,OAAQ,UAAW,gBAAiB,SAAU,WAAY,eAAgB,WAAY,cAAe,WAAY,WAAY,iBAAkB,YAAa,SAAU,eAAgB,UAAW,aAAc,QAAS,SAAU,gBAAiB,cAAe,cAAe,mBAAoB,iBAAkB,WAAY,aAAc,eAAgB,aAAc,QAAS,SAAU,cAAe,SAAU,UAAW,mBAAoB,UAAW,UAAW,OAAQ,WAAY,WAAY,kBAAmB,YAAa,UAAW,YAAa,WAAY,YAAa,mBAAoB,aAAc,UAAW,cAAe,aAAc,mBAAoB,QAAS,UAAW,iBAAkB,cAAe,iBAAkB,mBAAoB,YAAa,gBAAiB,WAAY,YAAa,gBAAiB,cAAe,gBAAiB,aAAc,cAAe,aAAc,WAAY,WAAY,aAAc,WAAY,UAAW,UAAW,YAAa,aAAc,cAAe,aAAc,cAAe,aAAc,aAAc,cAAe,UAAW,aAAc,cAAe,YAAa,WAAY,iBAAkB,WAAY,mBAAoB,WAAY,YAAa,WAAY,SAAU,cAAe,QAAS,WAAY,QAAS,WAAY,gBAAiB,SAAU,SAAU,WAAY,UAAW,SAAU,QAAS,aAAc,QAAS,QAAS,UAAW,YAAa,aAAc,cAAe,iBAAkB,UAAW,OAAQ,SAAU,aAAc,YAAa,WAAY,cAAe,mBAAoB,cAAe,UAAW,aAAc,UAAW,eAAgB,YAAa,SAAU,UAAW,OAAQ,kiBClBj3J,IAAMC,EAAY/B,IAAOC,IAAT+B,KASVC,EAAcjC,IAAOC,IAAViC,KAUXC,EAAgBnC,IAAOC,IAAVmC,KAKJ,SAASC,IAAS,IAAAC,EAEOC,mBAAS,IAFhBC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GAEtBI,EAFsBF,EAAA,GAEVG,EAFUH,EAAA,GAAAI,EAGLL,mBAAS,UAHJM,EAAAxB,OAAAoB,EAAA,EAAApB,CAAAuB,EAAA,GAGtBE,EAHsBD,EAAA,GAGhBE,EAHgBF,EAAA,GAAAG,EAIGT,mBAAS,iBAJZU,EAAA5B,OAAAoB,EAAA,EAAApB,CAAA2B,EAAA,GAItBE,EAJsBD,EAAA,GAIZE,EAJYF,EAAA,GAAAG,EAKJb,mBAAQ,uIALJc,EAAAhC,OAAAoB,EAAA,EAAApB,CAAA+B,EAAA,GAKtBE,EALsBD,EAAA,GAKjBE,EALiBF,EAAA,GAOvBG,EAAS,SAACC,EAAIC,GAChB,gGAAAlC,OAAkGkC,EAAlG,6BAAAlC,OAAkIiC,IA8BtI,OAbAE,oBAAU,WACVC,IACCC,IAAIP,GAEJQ,KAAK,SAAAC,GACFpB,EAAcoB,EAASC,QAE1BC,MAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,MAEzB,CAACZ,IAGHa,QAAQC,IAAI1B,GAERrC,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAA,uBAAAiB,OAAkBkB,EAAW2B,OAA7B,KAAA7C,OAAuCsB,EAAvC,aAAAtB,OAAuD0B,EAASoB,MAAM,KAAKC,KAAK,KAAhF,MACAlE,EAAAC,EAAAC,cAAC0B,EAAD,KACI5B,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,IAAI,iBAAX,eACArE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAO1D,KAAK,SAAS2D,KAAK,SAASjD,GAAG,cACrCG,EAAU+C,IAAI,SAAAnB,GAAI,OACfrD,EAAAC,EAAAC,cAAA,cAASmD,EAAKY,MAAM,KAAKC,KAAK,UAItClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,IAAI,iBAAX,mBACArE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAO1D,KAAK,SAAS2D,KAAK,SAASjD,GAAG,cACjCE,EAAUgD,IAAI,SAAAnB,GAAI,OACnBrD,EAAAC,EAAAC,cAAA,cAASmD,OAIjBrD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAQX,KAAK,SAAS6D,QAAS,kBA5C3C,WACI,IAAIpD,EAAOqD,SAASC,eAAe,cAAcC,MAC7CvB,EAAOqB,SAASC,eAAe,cAAcC,MAGjD,OAFA9B,EAAYzB,GACZqB,EAAQW,GACDH,EAAUC,EAAO9B,EAAMgC,IAuCcwB,IAAWrE,UAAU,0BAAzD,WAEJR,EAAAC,EAAAC,cAACwB,EAAD,CAAYlB,UAAU,gBACjB6B,EAAWmC,IAAI,SAACM,EAAKC,GAEd,OAAQ/E,EAAAC,EAAAC,cAACJ,EAAD,CAASkF,IAAKD,EAAKzD,GAAIyD,EAAK3D,IAAKqB,EAAMpB,KAAMwB,EAAUpC,MAAOqE,EAAIG,QAASnE,QAASgE,EAAII,WAAWjB,MAAM,KAAKkB,OAAO,EAAE,GAAGjB,KAAK,KAAMvD,QAASmE,EAAIrE,MAAOG,KAAMkE,EAAIlE,kHC3F9KjB,IAAOC,IAAVwF,KAAlB,IAoBeC,EAhBC,SAACtF,GACf,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aAAd,aACAR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAb,iDACAR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,SACdR,EAAAC,EAAAC,cAAA,2eCVR,IAAMqF,EAAW5F,IAAOC,IAAV4F,KAORC,EAAY9F,IAAOC,IAAV8F,KAITC,EAAWhG,IAAOC,IAAVgG,KAMC,SAASC,EAAI9F,GAAM,IAAAkC,EACFC,mBAAS,IADPC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GACvB6D,EADuB3D,EAAA,GACf4D,EADe5D,EAAA,GAwB9B,SAAS6D,EAAOC,GACd,GAAIA,EACJ,OAAOA,EAAKC,QAAQ,aAAc,IAiBpC,OAvCA5C,oBAAU,WAAM,IAAA6C,EACYpG,EAAMqG,MAAMC,OAAO/E,GAAI2C,MAAM,KADzCqC,EAAAtF,OAAAoB,EAAA,EAAApB,CAAAmF,EAAA,GACL/E,EADKkF,EAAA,GACDjF,EADCiF,EAAA,GACKhF,EADLgF,EAAA,GAEZxC,QAAQC,IAAI3C,EAAKC,EAAMC,GAInBwC,QAAQC,IAAI,iBACdR,IACGC,IADH,0FAAArC,OACiGC,EADjG,6BAAAD,OACgIE,IAC7HoC,KAAK,SAAAC,GACJqC,EAAUrC,EAASC,KAAKrC,MAEzBsC,MAAM,SAAAC,GACLC,QAAQD,MAAM,eAAgBA,MAInC,IACLC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAIhE,GAqBVC,EAAAC,EAAAC,cAACqF,EAAD,KACEvF,EAAAC,EAAAC,cAACyF,EAAD,KACA3F,EAAAC,EAAAC,cAAA,UAAK4F,EAAOrF,OACZT,EAAAC,EAAAC,cAAA,SAAI8F,EAASF,EAAOS,gBAEpBvG,EAAAC,EAAAC,cAACuF,EAAD,KACCO,EAAOF,EAAOU,eCpDRC,MAVf,WACE,OACEzG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACfR,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC9G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7E,IACjChC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWhB,YCRtCkB,IAASC,OAAOhH,EAAAC,EAAAC,cAACa,EAAA,EAAD,KAAQf,EAAAC,EAAAC,cAAC+G,EAAD,OAAkBvC,SAASC,eAAe","file":"static/js/main.125618ac.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\nimport {Link} from 'react-router-dom'\n\nconst CardWrapper =styled.div`\nmargin: 2%;\nwidth: 35%;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\ntransition: all 0.3s cubic-bezier(.25,.8,.25,1);\n:hover{\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n}\n}\n`\n\nexport default function JobCard(props){\n    return (\n    <CardWrapper>\n        <div>\n        <Card body outline color=\"primary\">\n        <CardTitle className='h3'>{props.title}</CardTitle>\n        <CardText>{props.p_title} | {props.type}</CardText> <CardText>Location: {props.locate}</CardText><CardText>Job Created: {props.created}</CardText>\n        <Link to={`/Job/${props.job}-${props.city}-${props.id}`}{...props}><Button color=\"primary\">Learn More</Button></Link>\n        </Card>\n    </div>\n    </CardWrapper>\n    )\n}\n\n","\nexport const languages = [\n    'python',\n    'HTML',\n    'C',\n    'C++',\n    'Java',\n    'C#',\n    'JavaScript',\n    'SQL',\n    'Pascal',\n    'Ruby',\n    'MATLAB',\n    'Swift',\n    'Perl',\n    'R',\n    'SAS',\n    'Dart',\n    'COBOL',\n    'ABAP',\n    'Fortran',\n    'Lua',\n    'Rust',\n    'Bash',\n    'Julia'\n]\nexport const cityNames = [\"Aberdeen\", \"Abilene\", \"Akron\", \"Albany\", \"Albuquerque\", \"Alexandria\", \"Allentown\", \"Amarillo\", \"Anaheim\", \"Anchorage\", \"Ann Arbor\", \"Antioch\", \"Apple Valley\", \"Appleton\", \"Arlington\", \"Arvada\", \"Asheville\", \"Athens\", \"Atlanta\", \"Atlantic City\", \"Augusta\", \"Aurora\", \"Austin\", \"Bakersfield\", \"Baltimore\", \"Barnstable\", \"Baton Rouge\", \"Beaumont\", \"Bel Air\", \"Bellevue\", \"Berkeley\", \"Bethlehem\", \"Billings\", \"Birmingham\", \"Bloomington\", \"Boise\", \"Boise City\", \"Bonita Springs\", \"Boston\", \"Boulder\", \"Bradenton\", \"Bremerton\", \"Bridgeport\", \"Brighton\", \"Brownsville\", \"Bryan\", \"Buffalo\", \"Burbank\", \"Burlington\", \"Cambridge\", \"Canton\", \"Cape Coral\", \"Carrollton\", \"Cary\", \"Cathedral City\", \"Cedar Rapids\", \"Champaign\", \"Chandler\", \"Charleston\", \"Charlotte\", \"Chattanooga\", \"Chesapeake\", \"Chicago\", \"Chula Vista\", \"Cincinnati\", \"Clarke County\", \"Clarksville\", \"Clearwater\", \"Cleveland\", \"College Station\", \"Colorado Springs\", \"Columbia\", \"Columbus\", \"Concord\", \"Coral Springs\", \"Corona\", \"Corpus Christi\", \"Costa Mesa\", \"Dallas\", \"Daly City\", \"Danbury\", \"Davenport\", \"Davidson County\", \"Dayton\", \"Daytona Beach\", \"Deltona\", \"Denton\", \"Denver\", \"Des Moines\", \"Detroit\", \"Downey\", \"Duluth\", \"Durham\", \"El Monte\", \"El Paso\", \"Elizabeth\", \"Elk Grove\", \"Elkhart\", \"Erie\", \"Escondido\", \"Eugene\", \"Evansville\", \"Fairfield\", \"Fargo\", \"Fayetteville\", \"Fitchburg\", \"Flint\", \"Fontana\", \"Fort Collins\", \"Fort Lauderdale\", \"Fort Smith\", \"Fort Walton Beach\", \"Fort Wayne\", \"Fort Worth\", \"Frederick\", \"Fremont\", \"Fresno\", \"Fullerton\", \"Gainesville\", \"Garden Grove\", \"Garland\", \"Gastonia\", \"Gilbert\", \"Glendale\", \"Grand Prairie\", \"Grand Rapids\", \"Grayslake\", \"Green Bay\", \"GreenBay\", \"Greensboro\", \"Greenville\", \"Gulfport-Biloxi\", \"Hagerstown\", \"Hampton\", \"Harlingen\", \"Harrisburg\", \"Hartford\", \"Havre de Grace\", \"Hayward\", \"Hemet\", \"Henderson\", \"Hesperia\", \"Hialeah\", \"Hickory\", \"High Point\", \"Hollywood\", \"Honolulu\", \"Houma\", \"Houston\", \"Howell\", \"Huntington\", \"Huntington Beach\", \"Huntsville\", \"Independence\", \"Indianapolis\", \"Inglewood\", \"Irvine\", \"Irving\", \"Jackson\", \"Jacksonville\", \"Jefferson\", \"Jersey City\", \"Johnson City\", \"Joliet\", \"Kailua\", \"Kalamazoo\", \"Kaneohe\", \"Kansas City\", \"Kennewick\", \"Kenosha\", \"Killeen\", \"Kissimmee\", \"Knoxville\", \"Lacey\", \"Lafayette\", \"Lake Charles\", \"Lakeland\", \"Lakewood\", \"Lancaster\", \"Lansing\", \"Laredo\", \"Las Cruces\", \"Las Vegas\", \"Layton\", \"Leominster\", \"Lewisville\", \"Lexington\", \"Lincoln\", \"Little Rock\", \"Long Beach\", \"Lorain\", \"Los Angeles\", \"Louisville\", \"Lowell\", \"Lubbock\", \"Macon\", \"Madison\", \"Manchester\", \"Marina\", \"Marysville\", \"McAllen\", \"McHenry\", \"Medford\", \"Melbourne\", \"Memphis\", \"Merced\", \"Mesa\", \"Mesquite\", \"Miami\", \"Milwaukee\", \"Minneapolis\", \"Miramar\", \"Mission Viejo\", \"Mobile\", \"Modesto\", \"Monroe\", \"Monterey\", \"Montgomery\", \"Moreno Valley\", \"Murfreesboro\", \"Murrieta\", \"Muskegon\", \"Myrtle Beach\", \"Naperville\", \"Naples\", \"Nashua\", \"Nashville\", \"New Bedford\", \"New Haven\", \"New London\", \"New Orleans\", \"New York\", \"New York City\", \"Newark\", \"Newburgh\", \"Newport News\", \"Norfolk\", \"Normal\", \"Norman\", \"North Charleston\", \"North Las Vegas\", \"North Port\", \"Norwalk\", \"Norwich\", \"Oakland\", \"Ocala\", \"Oceanside\", \"Odessa\", \"Ogden\", \"Oklahoma City\", \"Olathe\", \"Olympia\", \"Omaha\", \"Ontario\", \"Orange\", \"Orem\", \"Orlando\", \"Overland Park\", \"Oxnard\", \"Palm Bay\", \"Palm Springs\", \"Palmdale\", \"Panama City\", \"Pasadena\", \"Paterson\", \"Pembroke Pines\", \"Pensacola\", \"Peoria\", \"Philadelphia\", \"Phoenix\", \"Pittsburgh\", \"Plano\", \"Pomona\", \"Pompano Beach\", \"Port Arthur\", \"Port Orange\", \"Port Saint Lucie\", \"Port St. Lucie\", \"Portland\", \"Portsmouth\", \"Poughkeepsie\", \"Providence\", \"Provo\", \"Pueblo\", \"Punta Gorda\", \"Racine\", \"Raleigh\", \"Rancho Cucamonga\", \"Reading\", \"Redding\", \"Reno\", \"Richland\", \"Richmond\", \"Richmond County\", \"Riverside\", \"Roanoke\", \"Rochester\", \"Rockford\", \"Roseville\", \"Round Lake Beach\", \"Sacramento\", \"Saginaw\", \"Saint Louis\", \"Saint Paul\", \"Saint Petersburg\", \"Salem\", \"Salinas\", \"Salt Lake City\", \"San Antonio\", \"San Bernardino\", \"San Buenaventura\", \"San Diego\", \"San Francisco\", \"San Jose\", \"Santa Ana\", \"Santa Barbara\", \"Santa Clara\", \"Santa Clarita\", \"Santa Cruz\", \"Santa Maria\", \"Santa Rosa\", \"Sarasota\", \"Savannah\", \"Scottsdale\", \"Scranton\", \"Seaside\", \"Seattle\", \"Sebastian\", \"Shreveport\", \"Simi Valley\", \"Sioux City\", \"Sioux Falls\", \"South Bend\", \"South Lyon\", \"Spartanburg\", \"Spokane\", \"Springdale\", \"Springfield\", \"St. Louis\", \"St. Paul\", \"St. Petersburg\", \"Stamford\", \"Sterling Heights\", \"Stockton\", \"Sunnyvale\", \"Syracuse\", \"Tacoma\", \"Tallahassee\", \"Tampa\", \"Temecula\", \"Tempe\", \"Thornton\", \"Thousand Oaks\", \"Toledo\", \"Topeka\", \"Torrance\", \"Trenton\", \"Tucson\", \"Tulsa\", \"Tuscaloosa\", \"Tyler\", \"Utica\", \"Vallejo\", \"Vancouver\", \"Vero Beach\", \"Victorville\", \"Virginia Beach\", \"Visalia\", \"Waco\", \"Warren\", \"Washington\", \"Waterbury\", \"Waterloo\", \"West Covina\", \"West Valley City\", \"Westminster\", \"Wichita\", \"Wilmington\", \"Winston\", \"Winter Haven\", \"Worcester\", \"Yakima\", \"Yonkers\", \"York\", \"Youngstown\"];\n","import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport JobCard from './JobCard'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {Link} from 'react-router-dom'\nimport {languages, cityNames} from './data'\n\nconst CustomCard =styled.div`\ndisplay:flex;\nflex-direction: row;\nflex-wrap: wrap;\nalign-items: center;\nalign-content: center;\njustify-content: space-evenly;\n// margin: 4%;\n`\nconst FormWrapper = styled.div`\nwidth: 70%;\nmargin: 0 auto;\ndisplay:flex;\njustify-content: space-evenly;\nalign-content: center;\nalign-items: center;\nbackground-color: white;\n\n`\nconst GridContainer = styled.div`\n// padding: 2% 0;\n`\n\n\nexport default function JobGrid(){\n\n    const [companyArr, setCompanyArr] = useState([])\n    const [tech, setTech] = useState('Python')\n    const [location, setLocation] = useState('San_Francisco')\n    const [url ,setTheUrl] = useState(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=Python&full_time=true&location=$San_Franciso`)\n\n    const setUrl = (loc,lang) =>{\n        return (`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${lang}&full_time=true&location=${loc}`)\n    }\n    \n    const tech_list = ['Python','Java', 'JavaScript', 'C++', 'C']\n    const location_list = ['San_Francisco','Los_Angeles','New_York','Las_Vegas','San_Diego','Berkeley']\n\n    function getInput(){\n        let city = document.getElementById('citySelect').value\n        let lang = document.getElementById('langSelect').value\n        setLocation(city)\n        setTech(lang)\n        return setTheUrl(setUrl(city, lang))\n        \n        \n    }\n\n\n    useEffect(()=>{ \n    axios\n    .get(url)\n    //.get('https://swapi.co/api/people/?page=1')\n    .then(response=>{\n        setCompanyArr(response.data);\n    })\n    .catch(error=> console.log(error))\n\n    },[url])\n\n   \n    console.log(companyArr)\n    return(\n        <GridContainer>\n            <h2>{`There are ${companyArr.length} ${tech} jobs in ${location.split('_').join(' ')} `}</h2> \n            <FormWrapper>\n                <FormGroup>\n                    <Label for=\"exampleSelect\">Select City</Label>\n                    <Input type=\"select\" name=\"select\" id=\"citySelect\">\n                    {cityNames.map(lang =>\n                        <option>{lang.split('_').join(' ')}</option>\n                        )}\n                    </Input>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"exampleSelect\">Select Language</Label>\n                    <Input type=\"select\" name=\"select\" id=\"langSelect\">\n                        {languages.map(lang =>\n                        <option>{lang}</option>\n                        )}\n                    </Input>\n                </FormGroup>\n                <Button type=\"submit\" onClick={()=> getInput()}className='btn-lg btn-dark btn-lg'>Submit</Button>\n            </FormWrapper>\n            <CustomCard className='card-section'>\n                {companyArr.map((obj, ind)=>\n                    { \n                        return (<JobCard key={ind} id={ind} job={tech} city={location} title={obj.company} created={obj.created_at.split(' ').splice(0,3).join(' ')} p_title={obj.title} type={obj.type}/>);},)\n                }\n            </CustomCard>\n        </GridContainer >\n    )\n\n\n}\n","import React from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\nimport styled from 'styled-components'\n\nconst JumboWrapper = styled.div`\nbackground: green;\n`\n\nconst Example = (props) => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1 className=\"display-3\">Tech Jobs</h1>\n        <p className=\"lead\">Search for technology opportunities near you!</p>\n        <hr className=\"my-2\" />\n        <p>This application is powered by a GitHub API</p>\n        {/* <p className=\"lead\">\n          <Button color=\"primary\">Learn More</Button>\n        </p> */}\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Example;","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport DOMParser from 'dom-parser'\n\nconst TextWrap = styled.div`\ndisplay:flex;\njustify-contetn:center;\nalign-content: center;\nalign-items: center;\nmargin: auto;\n`\nconst RightWrap = styled.div`\nwidth: 60%;\nmargin: 3% 3% 3% 1.5%;\n`\nconst LeftWrap = styled.div`\nwidth: 35%;\nmargin: 3% 1.5% 3% 3%;\n\n`\n\nexport default function Job(props){\n    const [jobObj, setJobObj] = useState([])\n    \n    // const [job,city, id] = url.split('-')\n    useEffect(() => {\n        const [job,city, id] = (props.match.params.id).split('-')\n        console.log(job, city, id)\n        \n            // setUrl(props.match.params.id)\n            // console.log(url)\n            console.log('outside axios')\n          axios\n            .get(`https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${job}&full_time=true&location=${city}`)\n            .then(response => {\n              setJobObj(response.data[id])\n            })\n            .catch(error => {\n              console.error('Server Error', error);\n            });\n       \n        \n      }, []);\n    console.log(jobObj)\n    console.log(props)\n    function noHTML(text){\n      if (text){\n      return text.replace(/<[^>]*>?/gm, '');\n      }\n    }\n    function ComponentPlease(text){\n      // not working \n      console.log(text)\n      if (text){\n        const parser = new DOMParser()\n        const firedHTML = parser.parseFromString(text, 'text/xml')\n        const wrapper  = document.createElement('div')\n        console.log(firedHTML)\n        // wrapper.appendChild(firedHTML)\n        // console.log(wrapper.firstChild.innerHTML)\n        return({firedHTML})\n    }\n    }\n\n    return(\n      <TextWrap>\n        <LeftWrap>\n        <h1>{jobObj.title}</h1>\n        <p>{noHTML  (jobObj.how_to_apply)}</p>\n        </LeftWrap>\n        <RightWrap>\n        {noHTML(jobObj.description)}\n        </RightWrap>\n      </TextWrap>\n    )\n}\n\n//\"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=undefined&full_time=true&location=undefined\"\n\n//fdajkjfkjpfp9upofpofnnnvkjlfkfhidhfsdfhwppujjdfklsdjljjslkdkjflksdjfsjffdjfidjjfjiosadifjsdfjjfdifjbggrgrrfdddsaf","import React from \"react\";\nimport \"./App.css\";\nimport JobGrid from './components/JobGrid'\nimport JobJumbo from './components/JobJumbo'\nimport JobSearcher from './components/JobSearcher'\nimport styled from 'styled-components'\nimport {Route} from 'react-router-dom'\nimport Job from './components/Job'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Route exact path='/' component={JobJumbo}/>\n    <Route exact path='/' component={JobGrid}/> \n    <Route path='/Job/:id' component={Job}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}